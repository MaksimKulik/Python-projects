def is_year_leap(year):
    # Check the leap year conditions
    if (year % 4 == 0 and year % 100 != 0) or (year % 400 == 0):
        return True
    else:
        return False

def days_in_month(year, month):
    # Convert month to string for consistency in processing
    # month string will work no matter how you enter it, as by name or as a number
    month = str(month).lower()

    days = {
        "january": 31, "1": 31,
        "february": 29 if is_year_leap(year) else 28, "2": 29 if is_year_leap(year) else 28,
        "march": 31, "3": 31,
        "april": 30, "4": 30,
        "may": 31, "5": 31,
        "june": 30, "6": 30,
        "july": 31, "7": 31,
        "august": 31, "8": 31,
        "september": 30, "9": 30,
        "october": 31, "10": 31,
        "november": 30, "11": 30,
        "december": 31, "12": 31
    }

    return days.get(month, False)
        
#Starting program:
year = int(input("Enter the year: "))
month = str(input("Enter the month: "))

#Printing results:
if is_year_leap(year):
    print(f"{year} is a leap year.")
else:
    print(f"{year} is not a leap year.")
    
if days_in_month(year, month):
    print (f"{month} month has {days_in_month(year, month)} days.")
elif days_in_month(year, month) == False:
    print (f"{month} is not a month.")

